#include<stdio.h>
int adj[10][10],n,s,i,j;
int q[10],front=-1,rear=-1;
int varr[10]={0,0,0,0,0,0,0,0,0,0};
void enqueue(int item)
{
if(rear==9)
{
printf("Queue is full");
}
else
{
if(rear==-1)
{
rear++;
front++;
q[rear]=item;
}
else
{
rear++;
}
q[rear]=item;
}
}
int dequeue()
{
int k;
if((front>rear)||(front==-1))
{
return(0);
}
else
{
k=q[front];
front++;
return(k);
}
}
void bfs(int s,int n)
{
int p;
enqueue(s);
varr[s]=1;
p=dequeue();
if(p!=0)
{
printf("%d\t",p);
}
while(p!=0)
{
for(i=1;i<=n;i++)
{
if((adj[p][i]==1)&&(varr[i]==0))
{
enqueue(i);
varr[i]=1;
}
}
p=dequeue();
if(p!=0)
{
printf("%d\t",p);
}
}
}
void main()
{
printf("Enter the number of vertices : ");
scanf("%d",&n);
printf("Enter the adjacency matrix : ");
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
scanf("%d",&adj[i][j]);
}
}
printf("Enter the starting vertex : ");
scanf("%d",&s);
bfs(s,n);
}
