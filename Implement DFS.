#include<stdio.h>
int adj[10][10],n,s,i,j;
int stack[10],top=-1;
int varr[10]={0,0,0,0,0,0,0,0,0,0};
void push(int item)
{
if(top==9)
{
printf("Stack is full");
}
else
{
top++;
stack[top]=item;
}
}
int pop()
{
int k;
if(top==-1)
{
return(0);
}
else
{
k=stack[top];
top--;
return(k);
}
}
void dfs(int s,int n)
{
int p;
push(s);
varr[s]=1;
p=pop();
if(p!=0)
{
printf("%d\t",p);
}
while(p!=0)
{
for(i=1;i<=n;i++)
{
if((adj[p][i]==1)&&(varr[i]==0))
{
push(i);
varr[i]=1;
}
}
p=pop();
if(p!=0)
{
printf("%d\t",p);
}
}
}
void main()
{
printf("Enter the number of vertices : ");
scanf("%d",&n);
printf("Enter the adjacency matrix : ");
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
scanf("%d",&adj[i][j]);
}
}
printf("Enter the starting vertex : ");
scanf("%d",&s);
dfs(s,n);
}
